Kubernetes
***************

1. It does the following things:

2.Storage orchestration

3. Automated rollouts and rollbacks

4. You can describe the desired state for your deployed containers using Kubernetes, and it can change the actual state to the desired state at a controlled rate. For example, you can automate Kubernetes to create new containers for your deployment, remove existing containers and adopt all their resources to the new container.

6. Automatic bin packing
Kubernetes allows you to specify how much CPU and memory (RAM) each container needs. When containers have resource requests specified, Kubernetes can make better decisions to manage the resources for containers.

7.Kubernetes restarts containers that fail, replaces containers, kills containers that don’t respond to your user-defined health check, and doesn’t advertise them to clients until they are ready to serve.


8.. Kubernetes provides the building blocks for building developer platforms, but preserves user choice and flexibility where it is important.

9.Does not deploy source code and does not build your application

10.n fact, it eliminates the need for orchestration. The technical definition of orchestration is execution of a defined workflow: first do A, then B, then C. In contrast, Kubernetes is comprised of a set of independent, composable control processes that continuously drive the current state towards the provided desired state. 

11.The abstractions in Kubernetes allow you to deploy containerized applications to a cluster without tying them specifically to individual machines.

 Kubernetes automates the distribution and scheduling of application containers across a cluster in a more efficient way.


 Master and NodesThe Master is responsible for managing the cluster. The master coordinates all activities in your cluster, such as scheduling applications, maintaining applications' desired state, scaling applications, and rolling out new updates.

 . Each node has a "Kubelet", which is an agent for managing the node and communicating with the Kubernetes master. 

 The node should also have tools for handling container operations, such as Docker or rkt. 

 When you deploy applications on Kubernetes, you tell the master to start the application containers. The master schedules the containers to run on the cluster's nodes. The nodes communicate with the master using the Kubernetes API, which the master exposes. End users can also use the Kubernetes API directly to interact with the cluster.
 A Kubernetes cluster that handles production traffic should have a minimum of three nodes.

  If the Node hosting an instance goes down or is deleted, the Deployment controller replaces the instance with an instance on another Node in the cluster. This provides a self-healing mechanism to address machine failure or maintenance.